/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        if(root == null){
            return res;
        }
        findpaths(root, "", res);
        return res;
    }
    static void findpaths(TreeNode root, String path, List<String> res){
        if(root != null){
            path += root.val;
            if(root.left == null && root.right == null){
                res.add(path);
            }
            else{
                path += "->";
                findpaths(root.left, path, res);
                findpaths(root.right, path, res);
            }
        }
    }
}