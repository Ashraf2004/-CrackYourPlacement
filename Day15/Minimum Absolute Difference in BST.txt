/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int getMinimumDifference(TreeNode root) {
        List<Integer> lst = new ArrayList<>();
        lot(root, lst);
        int min = Integer.MAX_VALUE;
        for(int i=1; i<lst.size(); i++){
            min = Math.min(min, Math.abs(lst.get(i)-lst.get(i-1)));
        }
        return min;
    }
    static void lot(TreeNode root, List<Integer> lst){
        if(root == null){
            return;
        }
        lot(root.left, lst);
        lst.add(root.val);
        lot(root.right, lst);
    }
}