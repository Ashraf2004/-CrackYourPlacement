class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return null;
        }

        // Step 1: Calculate the length of the list
        ListNode curr = head;
        int len = 0;
        while (curr != null) {
            len++;
            curr = curr.next;
        }
       
        // Step 2: Find the position to remove (len - n)
        int diff = len - n;
         System.out.println(diff);
        // Special case: if the node to remove is the head
        if (diff == 0) {
            return head.next;
        }

        curr = head;
        // Step 3: Traverse to the node just before the one to remove
        // for (int i = 1; i < diff; i++) {
        //     curr = curr.next;
        // }

          while(diff>1)
        {
            
            curr=curr.next;

            diff--;
        }
       

        // Step 4: Remove the nth node from the end
        curr.next = curr.next.next;

        return head;
    }
}
